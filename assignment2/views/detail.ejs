<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
      crossorigin="anonymous"
    />
    <title>Blog</title>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  </head>
  <script src="/api.js"></script>
  <style>
    .hide {
      display: none;
    }

    .show {
      display: inline;
    }
  </style>
  <script>
    let user;
    getSelf(function (u) {
      user = u;
    });

    const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);
    const postId = urlParams.get("postId");

    $(document).ready(function () {
      get_detail();

      get_comments(postId);
    });

    function get_detail() {
      $.ajax({
        type: "GET",
        url: `/posts/${postId}`,
        data: {},
        error: function (xhr, status, error) {
          if (status == 404) {
            alert("존재하지 않는 상품입니다.");
          }
          window.location.href = "/posts";
        },
        success: function (response) {
          let postDetail = response["detail"];
          $("#postName").text(postDetail["postName"]);

          sessionStorage.setItem("postId", postId);
          sessionStorage.setItem("title", postDetail["title"]);
          sessionStorage.setItem("author", postDetail["author"]);
          sessionStorage.setItem("contents", postDetail["contetns"]);
          sessionStorage.setItem("date", postDetail["date"]);

          make_card(response);
        },
      });

      function make_card(item) {
        $("#postDetailBox").empty();
        let postDetail = item["detail"];

        let title = postDetail["title"];
        let author = postDetail["author"];
        let date = postDetail["date"];
        let contents = postDetail["contents"];

        document.getElementById("title").innerHTML = `<h1>${title}</h1>`;
        document.getElementById(
          "date"
        ).innerHTML = `<h5>Last Edited :${date}</h5>`;
        document.getElementById(
          "author"
        ).innerHTML = `<h3>Author :${author}</h3>`;
        document.getElementById("contents").innerHTML = `<p>${contents}</p>`;
      }
    }

    function check_u() {
      $.ajax({
        type: "GET",
        url: `/posts/${postId}`,
        data: {},
        error: function (xhr, status, error) {
          if (status == 404) {
            alert("존재하지 않는 상품입니다.");
          }
          window.location.href = "/posts";
        },
        success: function (response) {
          let pw = response["detail"]["pw"];
          let id = response["detail"]["postId"];

          checkPW(pw, id);
        },
      });

      function checkPW(pw, id) {
        var value = window.prompt(" Password");
        var value_input = parseInt(value);

        if (value_input === pw) {
          window.location.href = `/update?postId=${id}`;
        } else {
          alert(" WHO YOU?");
        }
      }
    }

    function check_d() {
      $.ajax({
        type: "GET",
        url: `/posts/${postId}`,
        data: {},
        error: function (xhr, status, error) {
          if (status == 404) {
            alert("존재하지 않는 상품입니다.");
          }
          window.location.href = "/posts";
        },
        success: function (response) {
          let pw = response["detail"]["pw"];
          let id = response["detail"]["postId"];

          checkPW(pw, id);
        },
      });

      function checkPW(pw, id) {
        var value = window.prompt(" Password");
        var value_input = parseInt(value);

        if (value_input === pw) {
          alert("Password correct");

          $.ajax({
            type: "DELETE",
            url: `posts/${id}`,
            data: {},
            success: function (response) {
              // if success redirect to home
              window.location.href = "/";
            },
          });
        } else {
          alert(" WHO YOU?");
        }
      }
    }
    function write_comment() {
      // check usser token
      console.log(postId, " wtf here ");
      let contents = document.getElementById("inputComment").value;
      $.ajax({
        type: "POST",
        url: `comment/list/${postId}`,
        headers: {
          authorization: `Bearer ${localStorage.getItem("token")}`,
        },
        data: { contents },
        success: function (response) {
          // if success redirect to home
          location.reload();
        },
      });

      // post the comments -> 새로고침
    }

    function get_comments(postId) {
      $("#comment").empty();
      console.log(postId);
      $.ajax({
        type: "GET",
        url: `/comment/list/${postId}`,
        data: {},
        error: function (xhr, status, error) {
          if (status == 404) {
            alert(" error ");
          }
          window.location.href = `/detail?${postId}`;
        },
        success: function (response) {
          // console.log(response, "first ");
          // console.log(response["comments"], "second");
          //console.log(response["comments"].length);
          //console.log(response["comments"][0]);
          let comments = response["comments"];
          console.log(comments);

          for (let i = 0; i < comments.length; i++) {
            make_comment(comments[i]);
          }
          console.log("adios ");
          get_button(comments);
        },
      });

      function make_comment(item) {
        //console.log(item["commentAuthor"], item["contents"]);

        let htmlTemp = `<li>
                ${item["commentAuthor"]}| ${item["contents"]}      &emsp; &emsp;&emsp; &emsp;<button style="display: none" class="btn_change btn_edit" id="btn_edit" onclick="edit_comment(${item["commentId"]})">edit</button>
                        <button style="display: none" class="btn_delete" id="btn_delete" onclick="delete_comment(${item["commentId"]})">delete</button>
                      </li> <input style="display:none" type="text" id="change${item["commentId"]}" name="fname"><br><br><button  style="display:none" id="change${item["commentId"]}btn" onclick="change(${item["commentId"]})" >change</button> </input>`;

        $("#comment").append(htmlTemp);
      }
    }
    function get_button(comments) {
      $.ajax({
        type: "GET",
        url: "user/me",
        headers: {
          authorization: `Bearer ${localStorage.getItem("token")}`,
        },
        success: function (response) {},
        error: function (xhr, status, error) {
          if (status == 401) {
            alert("로그인이 필요합니다.");
          } else {
            localStorage.clear();
            alert("fuck off ");
          }
          window.location.href = "/";
        },
      });
      let btn_change = document.getElementsByClassName("btn_edit");
      let btn_delete = document.getElementsByClassName("btn_delete");

      for (let i = 0; i < btn_change.length; i++) {
        const author_from_comment = comments[i]["commentAuthor"];
        //console.log(user.id, author_from_comment);
        if (user.id === author_from_comment) {
          btn_change[i].style.display = "inline";
          btn_change[i].style.backgroundColor = "red";
        }
      }

      for (let i = 0; i < btn_delete.length; i++) {
        const author_from_comment = comments[i]["commentAuthor"];
        //console.log(user.id, author_from_comment);
        if (user.id === author_from_comment) {
          btn_delete[i].style.display = "inline";
          btn_delete[i].style.backgroundColor = "red";
        }
      }
    }

    function edit_comment(commentId) {
      //  make input box   -> ajax patch -> update
      console.log("you trying to edit the comment");
      document.getElementById(`change${commentId}`).style.display = "inline";
      document.getElementById(`change${commentId}btn`).style.display = "inline";
    }

    function delete_comment(commentId) {
      console.log("you trying to delete the comment");
      $.ajax({
        type: "DELETE",
        url: `comment/delete/${commentId}`,
        headers: {
          authorization: `Bearer ${localStorage.getItem("token")}`,
        },
        data: {},
        success: function (response) {
          // 성공하면
          console.log(" its working");
          location.reload();
        },
      });
    }
    function change(commentId) {
      contents = document.getElementById(`change${commentId}`).value;
      console.log(contents);

      $.ajax({
        type: "PATCH",
        url: `comment/edit/${commentId}`,
        headers: {
          authorization: `Bearer ${localStorage.getItem("token")}`,
        },
        data: { contents },
        success: function (response) {
          // 성공하면
          console.log(" its working");
          location.reload();
        },
      });
    }
  </script>
  <body>
    <!-- Optional JavaScript; choose one of the two! -->

    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
      crossorigin="anonymous"
    ></script>

    <nav class="navbar navbar-expand-lg navbar navbar-dark bg-primary">
      <div class="container-fluid">
        <a class="navbar-brand" href="#"> AIGOAIGO </a>
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarNavAltMarkup"
          aria-controls="navbarNavAltMarkup"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
          <div class="navbar-nav">
            <a class="nav-link" href="/" onclick="singOut()">Home</a>
            <a class="nav-link" href="/list" ">List</a>
          </div>
        </div>
      </div>
    </nav>

    <div class="container">
      <div class="row">
        <div class="col"></div>
        <div class="col-6">
          <div class="postDetailBox">
            <div class="title" id="title"><h1></h1></div>
            <div class="date" id="date"><h5>date</h5></div>
            <div class="author" id="author"><h3>author</h3></div>
            <div class="contents" id="contents"><p>contetns</p></div>
            <button
              type="button"
              class="btn btn-primary btn-lg"
              onclick="check_u()"
            >
              Edit
            </button>
            <button
              type="button"
              class="btn btn-primary btn-lg"
              onclick="check_d()"
            >
              Delete
            </button>
            <hr />
            <div>
              <h1>Comment</h1>
              <div class="form-group">
                <label for="comment">Leave your comment:</label>
                <textarea
                  class="form-control"
                  rows="3"
                  id="inputComment"
                ></textarea>
                <button onclick="write_comment()">Post</button>
              </div>
              <hr />
              <div id="comment">
                <li>
                  skyler | you suck
                  <button style="display: nnon" id="btn_edit">edit</button>
                  <button id="btn_delete">delete</button>
                </li>
              </div>
            </div>
          </div>
        </div>
        <div class="col"></div>
      </div>
    </div>
  </body>
</html>
